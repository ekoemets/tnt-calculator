{"version":3,"sources":["components/Cell.js","components/TRow.js","components/HeadCell.js","components/RowHead.js","components/TNTcalculator.js","components/Result.js","components/TableWrapper.js","App.js","serviceWorker.js","index.js"],"names":["Cell","props","handleChange","event","row","id","target","value","setState","state","newProps","this","Form","Control","onChange","Component","TRow","map","cell","index","key","Row","className","HeadCell","calcTabel","read","veerud","Xtabel","Ytabel","EXY","i","length","tnt","j","push","EX","EX2","paar","EY","EY2","Math","pow","DX","round","DY","COV","sigmaX","sigmaY","soltumatud","console","log","sÃµltumatud","korrelatsioonikordaja","Result","Object","keys","result","TableWrapper","onCalculate","tabel","rows","x","evaluate","err","val","decreaseSize","size","pop","increaseSize","Array","clearValues","createCells","end","ButtonGroup","Button","variant","onClick","Table","style","width","borderless","RowHead","handleRowChange","App","Container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7fe246b0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nexport class Cell extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value: props.row[props.id]\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({value: newProps.row[this.props.id]})\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.props.row[this.props.id] = event.target.value;\r\n        this.setState({value: event.target.value})\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <td>\r\n            <Form.Control value={this.state.value === null ? \"\" : this.state.value} onChange={this.handleChange} />\r\n            </td>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cell;","import React, { Component } from 'react';\r\nimport Cell from \"./Cell\";\r\n\r\nexport class TRow extends Component{\r\n\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            row: props.row\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({row: newProps.row})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <tbody>\r\n            <tr>\r\n                {this.props.row.map((cell, index) => (\r\n                    <Cell key={index} row={this.state.row} id={index}>\r\n\r\n                    </Cell>\r\n                ))}\r\n            </tr>\r\n            </tbody>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default TRow;","import React, { Component } from 'react';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nexport class Cell extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            value: props.row[props.id]\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({value: newProps.row[this.props.id]})\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.props.row[this.props.id] = event.target.value;\r\n        this.setState({value: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <th>\r\n            <Form.Control value={this.state.value === null ? \"\" : this.state.value} onChange={this.handleChange} />\r\n            </th>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cell;","import React, { Component } from 'react';\r\nimport HeadCell from \"./HeadCell\";\r\n\r\nexport class Row extends Component{\r\n\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            row: props.row\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({row: newProps.row})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <thead>\r\n            <tr>\r\n                <th className=\"align-middle\"><h4>X/Y</h4></th>\r\n                {this.props.row.map((cell, index) => (\r\n                    <HeadCell key={index} row={this.state.row} id={index}>\r\n                        \r\n                    </HeadCell>\r\n                ))}\r\n            </tr>\r\n            </thead>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Row;","function calcTabel(read, veerud){\r\n  var Xtabel = [];\r\n  var Ytabel = [];\r\n  var EXY = 0;\r\n\r\n  for (let i = 0; i < read.length; i++){\r\n    let tnt = 0;\r\n    for (let j = 1; j < read[0].length; j++){\r\n      tnt += read[i][j];\r\n      EXY += read[i][j] * read[i][0] * veerud[j-1][0];\r\n    }\r\n    Xtabel.push([read[i][0],tnt]);\r\n    //console.log(Xtabel);\r\n  }\r\n\r\n  for (let i = 0; i < veerud.length; i++){\r\n    var tnt = 0;\r\n    for (let j = 1; j < veerud[0].length; j++){\r\n      tnt += veerud[i][j];\r\n    }\r\n    Ytabel.push([veerud[i][0],tnt]);\r\n    //console.log(Ytabel)\r\n  }\r\n\r\n  var EX = 0;\r\n  var EX2 = 0;\r\n  for (let paar of Xtabel){\r\n    //console.log(paar);\r\n    EX += paar[0]*paar[1];\r\n    EX2 += paar[0]**2 * paar[1];\r\n  }\r\n  var EY = 0;\r\n  var EY2 = 0;\r\n  for (let paar of Ytabel){\r\n    EY += paar[0]*paar[1];\r\n    EY2 += Math.pow(paar[0],2) * paar[1];\r\n  }\r\n  var DX = Math.round((EX2 - Math.pow(EX,2))*10**6)/10**6;\r\n  var DY = Math.round((EY2 - Math.pow(EY,2))*10**6)/10**6;\r\n  var COV = EXY - EX*EY;\r\n  var sigmaX = Math.pow(DX,0.5);\r\n  var sigmaY = Math.pow(DY,0.5);\r\n\r\n  var soltumatud = \"jah\";\r\n  for (let i=0; i<read.length; i++){\r\n    for (let j=1; j<read.length; j++){\r\n      if (read[i][j] !== Math.round(Xtabel[i][1] * Ytabel[j-1][1] * 100000)/100000){\r\n        soltumatud = \"ei\";\r\n        console.log(`${read[i][j]} ei vÃµrdu ${Xtabel[i][1] * Ytabel[j-1][1]}, rida ${i}, veerg ${j}`);\r\n        break;\r\n      }\r\n    }\r\n    if (soltumatud === \"ei\"){\r\n      break;\r\n    }\r\n  }\r\n\r\n  return {EX:EX, EX2:EX2, EY:EY, EY2:EY2, DX:DX, DY:DY, EXY:EXY, COV: COV, sigmaX:sigmaX, sigmaY:sigmaY, sÃµltumatud:soltumatud, korrelatsioonikordaja:COV/(sigmaX*sigmaY)}\r\n}\r\nexport default calcTabel;\r\n/*\r\nconsole.log(calcTabel([\r\n        [1, 3/100, 15/100, 12/100],\r\n        [2, 4/100, 20/100, 16/100],\r\n        [3, 3/100, 15/100, 12/100]\r\n        ],[\r\n        [0, 3/100, 4/100, 3/100],\r\n        [1, 15/100, 20/100, 15/100],\r\n        [2, 12/100, 16/100, 12/100]\r\n        ]))\r\n        */","import React, { Component } from 'react';\r\n\r\nexport class Result extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"text-left\">\r\n            {Object.keys(this.props.result).map(key => \r\n                <p className=\"my-1\">{key}:{this.props.result[key]}</p>)}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\r\nimport  {Table, Button, ButtonGroup} from 'react-bootstrap';\r\nimport TRow from './TRow';\r\nimport RowHead from './RowHead';\r\nimport calcTabel from './TNTcalculator'\r\nimport Result from './Result';\r\nimport {evaluate} from 'mathjs';\r\n\r\nexport class TableWrapper extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            size : 2,\r\n            rows : this.createCells(2),\r\n            result: {}\r\n            \r\n        }\r\n    }\r\n\r\n    createCells(x){\r\n        let rows = [];\r\n        for(let i= 0; i< x + 1; i++){\r\n            rows.push([]);\r\n            let end = x + 1;\r\n            if(i === 0){\r\n                end = x;\r\n            }\r\n            for(let j = 0; j < end; j++){\r\n                rows[i].push(null);\r\n            }\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    onCalculate = (event) =>  {\r\n        var tabel = this.state.rows;\r\n        var read = [];\r\n        var veerud = [];\r\n        for (let x of tabel[0]){\r\n            try{\r\n                veerud.push([evaluate(x)]);\r\n            }catch(err){\r\n                this.setState({...this.state, result: {\"Error\":`Invalid input \"${x}\"`}})\r\n                return null;\r\n            }\r\n\r\n        }\r\n\r\n        for (let i=1; i< tabel.length; i++){\r\n            read.push(tabel[i].map(x => {\r\n                let val = null;\r\n                if (x !== null){\r\n                    try{\r\n                        val =evaluate(x);\r\n                    }catch(err){\r\n                        this.setState({...this.state, result: {\"Error\": `Invalid input \"${x}\"`}})\r\n                    }\r\n                }\r\n                return val;\r\n               }));\r\n        }\r\n\r\n        for (let i=0; i<veerud.length; i++){\r\n            for (let j=0; j<read.length; j++){\r\n                veerud[i].push(read[j][i+1]);\r\n            }\r\n        }\r\n\r\n        let result = calcTabel(read,veerud);\r\n        console.log(result)\r\n        this.setState({...this.state, result: result})\r\n    }\r\n\r\n    decreaseSize = () => {\r\n        if(this.state.size > 2){\r\n            this.state.rows.pop()\r\n            this.state.rows.map(row => row.pop())\r\n            this.setState({...this.state,\r\n                size: this.state.size -1,\r\n                rows: this.state.rows\r\n             })\r\n        }\r\n    }\r\n\r\n    increaseSize = () => {\r\n        this.state.rows.map(row => row.push(null));\r\n        this.state.rows.push([...Array(this.state.size + 2).keys()].map(i => null))\r\n        this.setState({...this.state, \r\n                       size: this.state.size +1,\r\n                       rows: this.state.rows\r\n                    })\r\n    }\r\n\r\n    clearValues = () => {\r\n        this.setState({...this.state, \r\n            rows : this.createCells(this.state.size)\r\n         })\r\n         console.log(this.state)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"d-flex justify-content-start my-3\">\r\n                    <span className=\"align-self-center\"><h4 className=\"my-0 mr-3\">ROW COUNT</h4></span>\r\n                    <ButtonGroup>\r\n                        <Button variant=\"secondary border-right\" onClick={this.decreaseSize}>-</Button>\r\n                        <Button variant=\"secondary border-left\" onClick={this.increaseSize}>+</Button>\r\n                    </ButtonGroup>\r\n                    <Button variant=\"success ml-2\" onClick={this.onCalculate}>Calculate</Button>\r\n                    <Button variant=\"danger ml-2\" onClick={this.clearValues}>Clear</Button>\r\n                </div>\r\n            <Table style={{width: \"auto\"}} borderless size=\"sm\">\r\n                <RowHead key={0} handleChange={this.handleRowChange} row={this.state.rows[0]}></RowHead>\r\n                {this.state.rows.map((row, index) => {\r\n                    if(index !== 0){\r\n                        return(<TRow key={index} handleChange={this.handleRowChange} row={row}>\r\n                            </TRow>)\r\n                    }\r\n                    return null;\r\n                })\r\n                }\r\n            </Table>\r\n            <Result key={0} result={this.state.result}></Result>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { TableWrapper } from './components/TableWrapper';\nimport {Container, Row} from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row className=\"justify-content-start\">      \n          <TableWrapper></TableWrapper>\n        </Row>\n      </Container>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}